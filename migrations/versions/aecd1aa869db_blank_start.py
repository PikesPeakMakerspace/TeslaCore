"""blank start

Revision ID: aecd1aa869db
Revises: 
Create Date: 2023-11-30 20:40:42.000003

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aecd1aa869db'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('device',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.Enum('MACHINE', 'DOOR', name='devicetypeenum'), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'OUT_OF_ORDER', 'OFFLINE', 'LOST', 'STOLEN', 'ON_LOAN', 'ARCHIVED', name='devicestatusenum'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('device', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_device_id'), ['id'], unique=False)

    op.create_table('emerge_access_card_status_code_lookup',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'LOST', 'STOLEN', 'ARCHIVED', name='accesscardstatusenum'), nullable=False),
    sa.Column('emerge_status_code', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('emerge_access_card_status_code_lookup', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_emerge_access_card_status_code_lookup_id'), ['id'], unique=False)

    op.create_table('temporary_migration_test_table',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('temporary_migration_test_table', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_temporary_migration_test_table_id'), ['id'], unique=False)

    op.create_table('token_blocklist',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blocklist_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blocklist_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blocklist_jti'), ['jti'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('emerge_access_level', sa.Enum('BUSINESS_HOURS_ACCESS', 'FULL_DAY_ACCESS', 'ADMIN', 'BLOCKED', name='useremergeaccesslevelenum'), nullable=True),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('role', sa.Enum('UNVERIFIED', 'USER', 'EDITOR', 'ADMIN', 'PUBLIC_DISPLAY', name='userroleenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'ARCHIVED', name='userstatusenum'), nullable=False),
    sa.Column('last_logged_in_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_updated_by_user_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['last_updated_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_id'), ['id'], unique=False)

    op.create_table('access_card',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('card_number', sa.Integer(), nullable=False),
    sa.Column('facility_code', sa.Integer(), nullable=False),
    sa.Column('card_type', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'LOST', 'STOLEN', 'ARCHIVED', name='accesscardstatusenum'), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_updated_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['last_updated_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('access_card', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_card_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_card_id'), ['id'], unique=False)

    op.create_table('access_node',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.Enum('MACHINE', 'DOOR', name='devicetypeenum'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('mac_address', sa.String(length=17), nullable=False),
    sa.Column('status', sa.Enum('OFFLINE', 'AVAILABLE', 'IN_USE', 'ERROR', 'ARCHIVED', name='accessnodestatusenum'), nullable=False),
    sa.Column('last_accessed_user_id', sa.String(length=36), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('device_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['last_accessed_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mac_address'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('access_node', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_node_id'), ['id'], unique=False)

    op.create_table('device_assignment_log',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('device_id', sa.String(length=36), nullable=False),
    sa.Column('assigned_to_user_id', sa.String(length=36), nullable=True),
    sa.Column('unassigned_from_user_id', sa.String(length=36), nullable=True),
    sa.Column('assigned_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['unassigned_from_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('device_assignment_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_device_assignment_log_assigned_to_user_id'), ['assigned_to_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_device_assignment_log_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_device_assignment_log_device_id'), ['device_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_device_assignment_log_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_device_assignment_log_unassigned_from_user_id'), ['unassigned_from_user_id'], unique=False)

    op.create_table('user_access_log',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('action', sa.Enum('REGISTER', 'LOGIN', 'LOGOUT', name='useraccessactionenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_access_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_access_log_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_access_log_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_access_log_user_id'), ['user_id'], unique=False)

    op.create_table('user_device',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('device_id', sa.String(length=36), nullable=False),
    sa.Column('assigned_to_user_id', sa.String(length=36), nullable=False),
    sa.Column('assigned_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_device', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_device_assigned_at'), ['assigned_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_device_assigned_to_user_id'), ['assigned_to_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_device_device_id'), ['device_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_device_id'), ['id'], unique=False)

    op.create_table('user_edit_log',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('role', sa.Enum('UNVERIFIED', 'USER', 'EDITOR', 'ADMIN', 'PUBLIC_DISPLAY', name='userroleenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'ARCHIVED', name='userstatusenum'), nullable=False),
    sa.Column('emerge_access_level', sa.Enum('BUSINESS_HOURS_ACCESS', 'FULL_DAY_ACCESS', 'ADMIN', 'BLOCKED', name='useremergeaccesslevelenum'), nullable=True),
    sa.Column('updated_by_user_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_edit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_edit_log_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_edit_log_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_edit_log_user_id'), ['user_id'], unique=False)

    op.create_table('access_card_log',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('access_card_id', sa.String(length=36), nullable=False),
    sa.Column('assigned_to_user_id', sa.String(length=36), nullable=True),
    sa.Column('assigned_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'LOST', 'STOLEN', 'ARCHIVED', name='accesscardstatusenum'), nullable=False),
    sa.Column('emerge_access_level', sa.Enum('BUSINESS_HOURS_ACCESS', 'FULL_DAY_ACCESS', 'ADMIN', 'BLOCKED', name='useremergeaccesslevelenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['access_card_id'], ['access_card.id'], ),
    sa.ForeignKeyConstraint(['assigned_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('access_card_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_card_log_access_card_id'), ['access_card_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_card_log_assigned_to_user_id'), ['assigned_to_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_card_log_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_card_log_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_card_log_status'), ['status'], unique=False)

    op.create_table('access_node_log',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('access_card_id', sa.String(length=36), nullable=False),
    sa.Column('access_node_id', sa.String(length=36), nullable=False),
    sa.Column('device_id', sa.String(length=36), nullable=False),
    sa.Column('action', sa.Enum('LOGIN', 'LOGOUT', 'HELLO', 'ACKNOWLEDGE', name='accessnodescanactionenum'), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('created_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['access_card_id'], ['access_card.id'], ),
    sa.ForeignKeyConstraint(['access_node_id'], ['access_node.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('access_node_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_node_log_access_card_id'), ['access_card_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_access_node_id'), ['access_node_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_device_id'), ['device_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_success'), ['success'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_node_log_user_id'), ['user_id'], unique=False)

    op.create_table('user_access_card',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('assigned_to_user_id', sa.String(length=36), nullable=False),
    sa.Column('access_card_id', sa.String(length=36), nullable=False),
    sa.Column('assigned_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['access_card_id'], ['access_card.id'], ),
    sa.ForeignKeyConstraint(['assigned_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_access_card', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_access_card_access_card_id'), ['access_card_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_access_card_assigned_by_user_id'), ['assigned_by_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_access_card_assigned_to_user_id'), ['assigned_to_user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_access_card_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_access_card_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_access_card', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_access_card_id'))
        batch_op.drop_index(batch_op.f('ix_user_access_card_created_at'))
        batch_op.drop_index(batch_op.f('ix_user_access_card_assigned_to_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_access_card_assigned_by_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_access_card_access_card_id'))

    op.drop_table('user_access_card')
    with op.batch_alter_table('access_node_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_node_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_success'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_id'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_device_id'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_created_at'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_action'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_access_node_id'))
        batch_op.drop_index(batch_op.f('ix_access_node_log_access_card_id'))

    op.drop_table('access_node_log')
    with op.batch_alter_table('access_card_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_card_log_status'))
        batch_op.drop_index(batch_op.f('ix_access_card_log_id'))
        batch_op.drop_index(batch_op.f('ix_access_card_log_created_at'))
        batch_op.drop_index(batch_op.f('ix_access_card_log_assigned_to_user_id'))
        batch_op.drop_index(batch_op.f('ix_access_card_log_access_card_id'))

    op.drop_table('access_card_log')
    with op.batch_alter_table('user_edit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_edit_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_edit_log_id'))
        batch_op.drop_index(batch_op.f('ix_user_edit_log_created_at'))

    op.drop_table('user_edit_log')
    with op.batch_alter_table('user_device', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_device_id'))
        batch_op.drop_index(batch_op.f('ix_user_device_device_id'))
        batch_op.drop_index(batch_op.f('ix_user_device_assigned_to_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_device_assigned_at'))

    op.drop_table('user_device')
    with op.batch_alter_table('user_access_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_access_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_access_log_id'))
        batch_op.drop_index(batch_op.f('ix_user_access_log_created_at'))

    op.drop_table('user_access_log')
    with op.batch_alter_table('device_assignment_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_device_assignment_log_unassigned_from_user_id'))
        batch_op.drop_index(batch_op.f('ix_device_assignment_log_id'))
        batch_op.drop_index(batch_op.f('ix_device_assignment_log_device_id'))
        batch_op.drop_index(batch_op.f('ix_device_assignment_log_created_at'))
        batch_op.drop_index(batch_op.f('ix_device_assignment_log_assigned_to_user_id'))

    op.drop_table('device_assignment_log')
    with op.batch_alter_table('access_node', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_node_id'))

    op.drop_table('access_node')
    with op.batch_alter_table('access_card', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_card_id'))
        batch_op.drop_index(batch_op.f('ix_access_card_created_at'))

    op.drop_table('access_card')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_id'))

    op.drop_table('user')
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blocklist_jti'))
        batch_op.drop_index(batch_op.f('ix_token_blocklist_id'))
        batch_op.drop_index(batch_op.f('ix_token_blocklist_created_at'))

    op.drop_table('token_blocklist')
    with op.batch_alter_table('temporary_migration_test_table', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_temporary_migration_test_table_id'))

    op.drop_table('temporary_migration_test_table')
    with op.batch_alter_table('emerge_access_card_status_code_lookup', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_emerge_access_card_status_code_lookup_id'))

    op.drop_table('emerge_access_card_status_code_lookup')
    with op.batch_alter_table('device', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_device_id'))

    op.drop_table('device')
    # ### end Alembic commands ###
